<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Álvaro Castellano - Personal Blog</title><link>https://a-castellano.github.io/</link><description>Recent content on Álvaro Castellano - Personal Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 18 May 2020 21:20:42 +0200</lastBuildDate><atom:link href="https://a-castellano.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Deploying VM's using cloud-init.</title><link>https://a-castellano.github.io/posts/deploying-vms-using-cloudinit/</link><pubDate>Sun, 31 May 2020 23:09:07 +0200</pubDate><guid>https://a-castellano.github.io/posts/deploying-vms-using-cloudinit/</guid><description>The beginning - VM templates Instead of having a server with multiple services installed, almost three years ago I started to use larger servers with KVM in order to manage multiple VM for those services. I had three &amp;ldquo;template&amp;rdquo; machines, for Debian 9, Ubuntu 16.04 and Ubuntu 18.04. Each time I needed a new machine I followed the following steps:
Clone the &amp;ldquo;template&amp;rdquo; VM. Power on the new VM. Reconfigure network config and DNS&amp;rsquo;s in order to change VM network interface.</description></item><item><title>About</title><link>https://a-castellano.github.io/about/</link><pubDate>Mon, 18 May 2020 21:20:42 +0200</pubDate><guid>https://a-castellano.github.io/about/</guid><description>I am a sysadmin engineer hungry for new challenges. When working in a project, I love projects that allow me to learn a new technologies.</description></item><item><title>Restrict Linux users to certain workspaces</title><link>https://a-castellano.github.io/posts/restrict-linux-users-to-certain-workspaces-only/</link><pubDate>Thu, 22 Sep 2016 21:15:07 +0200</pubDate><guid>https://a-castellano.github.io/posts/restrict-linux-users-to-certain-workspaces-only/</guid><description>In this post I will talk about managing workspace access for certain users in Linux environments. We will set a workspace where some guests will be able to work in their amazing project. These users won&amp;rsquo;t have access to the files outside of their shared workspace. Finally we will use Linux ACL to manage user permissions inside their workspace.
This post resolves a real issue that I had few days ago.</description></item><item><title>My marvelous adventures with Docker - Part II</title><link>https://a-castellano.github.io/posts/my-marvelous-adventures-with-docker-part-ii/</link><pubDate>Sun, 18 Sep 2016 21:24:07 +0200</pubDate><guid>https://a-castellano.github.io/posts/my-marvelous-adventures-with-docker-part-ii/</guid><description>In this post I continue my adventures with Docker. After creating our first image and container in the previous post I will look into how docker images can autostart services and how to establish communication between containers.
During this post we are creating images and storing them in Docker Hub. All my images are stored in my ArchonWeb repository. All the scripts used in this post an be found in my Docker repo.</description></item><item><title>My marvelous adventures with Docker - Part I</title><link>https://a-castellano.github.io/posts/my-marvelous-adventures-with-docker-part-i/</link><pubDate>Mon, 05 Sep 2016 21:24:07 +0200</pubDate><guid>https://a-castellano.github.io/posts/my-marvelous-adventures-with-docker-part-i/</guid><description>In this post I talk about how to get started in Docker. First we will set a Docker server, afterwards we will create your first Docker image and we will run it.
Let&amp;rsquo;s play with Docker and learn something about it!
But wait, what is Docker? Docker is an open platform to build, ship and run distributed applications anywhere. So you can run apps which &amp;ldquo;live&amp;rdquo; inside a contaniner runned and mannaged by Docker.</description></item></channel></rss>